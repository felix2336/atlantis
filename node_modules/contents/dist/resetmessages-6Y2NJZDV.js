import {
  MessageUser
} from "./chunk-P5JGOPVX.js";
import {
  init_esm_shims
} from "./chunk-WWCIODDN.js";

// Commands/Admin/resetmessages.ts
init_esm_shims();
import { SlashCommandBuilder, EmbedBuilder, PermissionFlagsBits, Colors } from "discord.js";
import { readFileSync, writeFileSync } from "fs";
var command = {
  data: new SlashCommandBuilder().setName("reset-messages").setDescription("Imitiere das Message Counter Reset Event").setDefaultMemberPermissions(PermissionFlagsBits.Administrator),
  async execute(interaction, client) {
    const channel = client.channels.cache.get("1196886539637112923" /* message_leaderboard */);
    const guild = client.guilds.cache.get("1146113684435898439");
    let DB = JSON.parse(readFileSync("./JSON/messages.json", "utf8"));
    const leaderboard = [];
    for (const UserData of DB) {
      const User = new MessageUser().assignData(UserData);
      leaderboard.push({ user: User.userid, count: User.getTotalMessages() });
      User.resetMessages();
      DB = DB.filter((u) => u.userid != User.userid);
      DB.push(User);
      writeFileSync("./JSON/messages.json", JSON.stringify(DB, null, 2), "utf8");
    }
    const sorted = leaderboard.sort((a, b) => b.count - a.count);
    let message = "";
    for (let i = 0; i < leaderboard.length; i++) {
      const entry = leaderboard[i];
      const member = await guild.members.fetch(entry.user);
      if (member.roles.cache.has("1201848061819891774")) {
        message += `\`\`${i + 1}. \`\`\u23F1\uFE0F <@${entry.user}> **\u2022 ${entry.count}** Nachrichten gesendet.
`;
      } else {
        if (entry.count < 50) {
          message += `\`\`${i + 1}. \`\`<a:redlight:1211374559224135700> <@${entry.user}> **\u2022 ${entry.count}** Nachrichten gesendet.
`;
        } else if (entry.count >= 50 && entry.count < 75) {
          message += `\`\`${i + 1}. \`\`<:dogsmile:1230441707766808608> <@${entry.user}> **\u2022 ${entry.count}** Nachrichten gesendet.
`;
        } else {
          message += `\`\`${i + 1}. \`\`<a:6797evolvingbadgeboost:1234205150898425898> <@${entry.user}> **\u2022 ${entry.count}** Nachrichten gesendet.
`;
        }
      }
    }
    const embed = new EmbedBuilder({
      title: "Weekly Messages Leaderboard",
      description: message,
      color: Colors.Aqua
    });
    await channel.send({ embeds: [embed] });
    interaction.reply({ content: "Message Leaderboard erfolgreich zur\xFCckgesetzt!", ephemeral: true });
  }
};
var resetmessages_default = command;
export {
  resetmessages_default as default
};
