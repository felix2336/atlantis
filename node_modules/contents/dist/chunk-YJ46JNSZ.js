import {
  casino_default,
  init_casino
} from "./chunk-W44NITJV.js";
import {
  __esm,
  __export,
  init_esm_shims
} from "./chunk-WWCIODDN.js";

// Commands/Casino/reset.ts
var reset_exports = {};
__export(reset_exports, {
  default: () => reset_default
});
import { EmbedBuilder, Colors, SlashCommandBuilder } from "discord.js";
var command, reset_default;
var init_reset = __esm({
  "Commands/Casino/reset.ts"() {
    init_esm_shims();
    init_casino();
    command = {
      data: new SlashCommandBuilder().setName("reset").setDescription("Setze das Konto eines Users zur\xFCck").addUserOption((input) => input.setName("target").setDescription("Welcher User?").setRequired(true)),
      async execute(interaction) {
        const target = interaction.options.getMember("target");
        const member = interaction.member;
        let User = await casino_default.findOne({ user: target.id });
        const minRole = interaction.guild.roles.cache.get("1170957646942191688");
        if (member.roles.highest.position < minRole.position) return interaction.reply({ embeds: [new EmbedBuilder({ title: "Fehler", description: "Du hast nicht die erforderlichen Berechtigungen f\xFCr diesen Command", color: Colors.DarkRed, timestamp: /* @__PURE__ */ new Date() })] });
        if (!User) return interaction.reply({ embeds: [new EmbedBuilder({ title: "Fehler", description: "Dieser User besitzt kein Konto!", color: Colors.Yellow, timestamp: /* @__PURE__ */ new Date() })] });
        User.wallet = 0;
        User.bank = 0;
        await User.save();
        interaction.reply({ embeds: [new EmbedBuilder({ title: "Erfolg", description: `Du hast erfolgreich das Konto von ${target} auf 0 zur\xFCckgesetzt`, color: Colors.DarkGreen, timestamp: /* @__PURE__ */ new Date() })] });
      }
    };
    reset_default = command;
  }
});

export {
  reset_default,
  reset_exports,
  init_reset
};
