import {
  cooldowns_default,
  init_cooldowns
} from "./chunk-NJJFVLCF.js";
import {
  casino_default,
  init_casino
} from "./chunk-W44NITJV.js";
import {
  __esm,
  __export,
  init_esm_shims
} from "./chunk-WWCIODDN.js";

// Commands/Casino/work.ts
var work_exports = {};
__export(work_exports, {
  default: () => work_default
});
import { EmbedBuilder, SlashCommandBuilder } from "discord.js";
var command, work_default;
var init_work = __esm({
  "Commands/Casino/work.ts"() {
    init_esm_shims();
    init_casino();
    init_cooldowns();
    command = {
      data: new SlashCommandBuilder().setName("work").setDescription("gehe arbeiten f\xFCr ein wenig Geld"),
      async execute(interaction, client) {
        let CD;
        CD = await cooldowns_default.findOne({ user: interaction.user.id });
        if (CD && CD.work) {
          const lastExecute = parseInt(CD.work);
          const now = Date.now();
          const cooldownTime = 36e5;
          const timestamp = Math.floor((lastExecute + cooldownTime) / 1e3);
          if (now - lastExecute < cooldownTime) {
            const embed2 = new EmbedBuilder({
              title: "Arbeit fehlgeschlagen",
              description: `Du kannst erneut arbeiten <t:${timestamp}:R>`,
              color: 16716820
            });
            interaction.reply({ embeds: [embed2] });
            return;
          }
          ;
        }
        if (!CD) {
          CD = await cooldowns_default.create({
            user: interaction.user.id,
            crime: String,
            work: String,
            rob: String,
            daily: String
          });
        }
        CD.work = Date.now();
        await CD.save();
        const income = Math.floor(Math.random() * 100);
        const messages = [
          `Du hast im REWE um die Ecke geholfen, die Regale aufzuf\xFCllen und hast \u{1F4B0}${income} erhalten`
        ];
        const embed = new EmbedBuilder({
          title: "Erfolgreiche Arbeit",
          description: messages[Math.floor(Math.random() * messages.length)],
          color: 7864064
        });
        let User;
        User = await casino_default.findOne({ user: interaction.user.id });
        if (!User) {
          User = await casino_default.create({
            user: interaction.user.id,
            wallet: 0,
            bank: 0,
            inventory: {}
          });
        }
        User.wallet += income;
        await User.save();
        interaction.reply({ embeds: [embed] });
      }
    };
    work_default = command;
  }
});

export {
  work_default,
  work_exports,
  init_work
};
