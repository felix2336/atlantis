import "./chunk-P5JGOPVX.js";
import {
  init_esm_shims
} from "./chunk-WWCIODDN.js";

// Commands/Admin/closerequest.ts
init_esm_shims();
import { SlashCommandBuilder, EmbedBuilder, ButtonBuilder, ActionRowBuilder, Colors } from "discord.js";
var command = {
  data: new SlashCommandBuilder().setName("closerequest").setDescription("Beantrage die Schlie\xDFung des aktuellen Tickets").addStringOption((input) => input.setName("reason").setDescription("Der Grund f\xFCr die Schlie\xDFung").setRequired(true)),
  async execute(interaction, client) {
    if (!interaction.member.roles.cache.has("1156298949301379212" /* staff */)) return interaction.reply({ content: "Du darfst diesen Befehl nicht nutzen!", ephemeral: true });
    const ticketUser = interaction.guild.members.cache.find((member) => member.user.username == interaction.channel.name.split("-")[1]);
    if (!ticketUser) return interaction.reply({ content: "Der User, der das Ticket erstellt hat, konnte nicht gefunden werden!", ephemeral: true });
    if (interaction.channel.parentId != "1173314530521129042" /* ticket */) return interaction.reply({ content: "Dies ist kein Ticket Kanal!", ephemeral: true });
    const embed = new EmbedBuilder({
      title: "Schlie\xDF-Anfrage",
      description: `${interaction.member} hat das Schlie\xDFen dieses Tickets angefordert! Grund:
\`\`\`
${interaction.options.getString("reason", true)}
\`\`\`
Bitte akzeptiere oder verweigere mit den unten stehenden Buttons!`,
      color: Colors.Green
    });
    const row = new ActionRowBuilder({
      components: [
        new ButtonBuilder({
          label: "Akzeptieren und schlie\xDFen",
          style: 3,
          emoji: "\u2611\uFE0F",
          customId: "cr_accept"
        }),
        new ButtonBuilder({
          label: "Ablehnen & offen lassen",
          style: 2,
          emoji: "\u274C",
          customId: "cr_decline"
        })
      ]
    });
    await interaction.reply({ content: `${ticketUser}`, embeds: [embed], components: [row] });
  }
};
var closerequest_default = command;
export {
  closerequest_default as default
};
