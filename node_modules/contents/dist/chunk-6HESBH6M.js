import {
  casino_default,
  init_casino
} from "./chunk-W44NITJV.js";
import {
  __esm,
  __export,
  init_esm_shims
} from "./chunk-WWCIODDN.js";

// Commands/Casino/pay.ts
var pay_exports = {};
__export(pay_exports, {
  default: () => pay_default
});
import { EmbedBuilder, SlashCommandBuilder } from "discord.js";
var command, pay_default;
var init_pay = __esm({
  "Commands/Casino/pay.ts"() {
    init_esm_shims();
    init_casino();
    command = {
      data: new SlashCommandBuilder().setName("pay").setDescription("Gib etwas von deinem Geld an einen anderen Spieler").addUserOption((input) => input.setName("user").setDescription("W\xE4hle den User aus").setRequired(true)).addNumberOption((input) => input.setName("amount").setDescription("Wie viel m\xF6chtest du dem Spieler geben?").setRequired(true)),
      async execute(interaction) {
        const User2 = await casino_default.findOne({ user: interaction.user.id });
        if (!User2) return interaction.reply({ content: "Du hast kein Geld, das du vergeben kannst", ephemeral: true });
        const target = interaction.options.getUser("user");
        const amount = interaction.options.getNumber("amount", true);
        if (amount < 1) return interaction.reply({ content: "Du kannst einem User nicht weniger als 1 geben, du Genie", ephemeral: true });
        else if (amount > User2.wallet) return interaction.reply({ content: "Du kannst einem User nicht mehr Geld geben, als du hast", ephemeral: true });
        let Target = await casino_default.findOne({ user: target.id });
        if (!Target) {
          Target = await casino_default.create({
            user: target.id,
            wallet: 0,
            bank: 0,
            inventory: {}
          });
        }
        User2.wallet -= amount;
        Target.wallet += amount;
        await User2.save();
        await Target.save();
        const embed = new EmbedBuilder({
          title: "\xDCberweisung",
          description: `Du hast erfolgreich \u{1F4B0}${amount} an ${target} gegeben`,
          color: 717384
        });
        interaction.reply({ embeds: [embed] });
      }
    };
    pay_default = command;
  }
});

export {
  pay_default,
  pay_exports,
  init_pay
};
