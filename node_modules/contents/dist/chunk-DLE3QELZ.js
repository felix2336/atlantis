import {
  cooldowns_default,
  init_cooldowns
} from "./chunk-NJJFVLCF.js";
import {
  casino_default,
  init_casino
} from "./chunk-W44NITJV.js";
import {
  __esm,
  __export,
  init_esm_shims
} from "./chunk-WWCIODDN.js";

// Commands/Casino/daily.ts
var daily_exports = {};
__export(daily_exports, {
  default: () => daily_default
});
import { EmbedBuilder, SlashCommandBuilder } from "discord.js";
var command, daily_default;
var init_daily = __esm({
  "Commands/Casino/daily.ts"() {
    init_esm_shims();
    init_casino();
    init_cooldowns();
    command = {
      data: new SlashCommandBuilder().setName("daily").setDescription("Hole dir deine t\xE4gliche Belohnung ab"),
      async execute(interaction) {
        let CD;
        CD = await cooldowns_default.findOne({ user: interaction.user.id });
        if (CD && CD.daily) {
          const now = Date.now();
          const lastExecute = parseInt(CD.daily);
          const cooldownTime = 864e5;
          const timestamp = Math.floor((lastExecute + cooldownTime) / 1e3);
          if (now - lastExecute < cooldownTime) {
            const embed2 = new EmbedBuilder({
              title: "Fehlgeschlagen",
              description: `Du kannst erst wieder <t:${timestamp}:R> deine t\xE4gliche Belohnung abholen`,
              color: 16716820
            });
            interaction.reply({ embeds: [embed2] });
            return;
          }
        }
        if (!CD) {
          CD = await cooldowns_default.create({
            user: interaction.user.id,
            crime: String,
            work: String,
            rob: String,
            daily: String
          });
        }
        CD.daily = Date.now();
        await CD.save();
        const dailyIncome = 750;
        const embed = new EmbedBuilder({
          title: "T\xE4gliches Einkommen erhalten",
          description: `Du hast erfolgreich dein t\xE4gliches Einkommen in H\xF6he von \u{1F4B0}${dailyIncome} erhalten`,
          color: 7864064
        });
        interaction.reply({ embeds: [embed] });
        let User;
        User = await casino_default.findOne({ user: interaction.user.id });
        if (!User) {
          User = await casino_default.create({
            user: interaction.user.id,
            wallet: 0,
            bank: 0,
            inventory: {}
          });
        }
        User.wallet += dailyIncome;
        await User.save();
      }
    };
    daily_default = command;
  }
});

export {
  daily_default,
  daily_exports,
  init_daily
};
