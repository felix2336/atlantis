import {
  casino_default,
  init_casino
} from "./chunk-W44NITJV.js";
import {
  __esm,
  __export,
  init_esm_shims
} from "./chunk-WWCIODDN.js";

// Commands/Casino/removemoney.ts
var removemoney_exports = {};
__export(removemoney_exports, {
  default: () => removemoney_default
});
import { EmbedBuilder, Colors, SlashCommandBuilder, PermissionFlagsBits } from "discord.js";
var command, removemoney_default;
var init_removemoney = __esm({
  "Commands/Casino/removemoney.ts"() {
    init_esm_shims();
    init_casino();
    command = {
      data: new SlashCommandBuilder().setName("removemoney").setDescription("Entferne Geld von dem Konto eines Users").setDefaultMemberPermissions(PermissionFlagsBits.Administrator).addUserOption((input) => input.setName("target").setDescription("W\xE4hle den User, von dessen Konto du Geld entfernen m\xF6chtest").setRequired(true)).addNumberOption((input) => input.setName("amount").setDescription("Gib an, wie viel du entfernen m\xF6chtest").setRequired(true)).addStringOption((input) => input.setName("type").setDescription("Von wo m\xF6chtest du Geld entfernen?").setRequired(true).addChoices({ name: "Wallet", value: "wallet" }, { name: "Bank", value: "bank" })),
      async execute(interaction) {
        const target = interaction.options.getMember("target");
        const member = interaction.member;
        let User = await casino_default.findOne({ user: target.user.id });
        if (!User) return interaction.reply({ embeds: [new EmbedBuilder({ title: "Account nicht gefunden", description: "Der Account dieses Users wurde nicht gefunden", color: Colors.Yellow, timestamp: /* @__PURE__ */ new Date() })] });
        const minRole = interaction.guild.roles.cache.get("1170957646942191688");
        if (member.roles.highest.position < minRole.position) return interaction.reply({ embeds: [new EmbedBuilder({ title: "Fehler", description: "Du hast nicht die erforderlichen Berechtigungen f\xFCr diesen Command", color: Colors.DarkRed, timestamp: /* @__PURE__ */ new Date() })] });
        const amount = interaction.options.getNumber("amount");
        const type = interaction.options.getString("type");
        if (User[type] < amount) return interaction.reply({ embeds: [new EmbedBuilder({ title: "Fehler", description: "Der User hat nicht so viel Geld.", color: Colors.Yellow, timestamp: /* @__PURE__ */ new Date() })] });
        User[type] -= amount;
        await User.save();
        interaction.reply({ embeds: [new EmbedBuilder({ title: "Erfolg", description: `Du hast erfolgreich der ${type} von ${target} ${amount} abgezogen`, color: Colors.DarkGreen })] });
      }
    };
    removemoney_default = command;
  }
});

export {
  removemoney_default,
  removemoney_exports,
  init_removemoney
};
