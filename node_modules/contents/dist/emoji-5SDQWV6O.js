import {
  init_esm_shims
} from "./chunk-WWCIODDN.js";

// Commands/Admin/emoji.ts
init_esm_shims();
import { SlashCommandBuilder, PermissionFlagsBits } from "discord.js";
import axios from "axios";
var command = {
  data: new SlashCommandBuilder().setName("steal-emoji").setDescription("Hole ein Emoji von einem anderen Server auf diesen").addStringOption((input) => input.setName("emoji").setDescription("Welches Emoji m\xF6chtest du auf diesen Server holen?").setRequired(true)).setDefaultMemberPermissions(PermissionFlagsBits.Administrator),
  async execute(interaction, client) {
    const emoji = interaction.options.get("emoji", true).value;
    const id = emoji.split(":").pop()?.split(">")[0];
    const emojiName = emoji.split(":")[1];
    if (!id) return interaction.reply({ content: "Das Emoji konnte nicht geladen werden!", ephemeral: true });
    if (emoji.startsWith("<") && emoji.endsWith(">")) {
      const type = await axios.get(`https://cdn.discordapp.com/emojis/${id}.gif`).then((image) => {
        if (image) return "gif";
        else return "png";
      }).catch((err) => {
        return "png";
      });
      const emojiurl = `https://cdn.discordapp.com/emojis/${id}.${type}?quality=lossless`;
      await client.guild.emojis.create({
        attachment: `${emojiurl}`,
        name: emojiName
      }).then((emoji2) => {
        return interaction.reply({ content: `Das Emoji \`${emoji2.name}\`: ${emoji2} wurde erfolgreich hinzugef\xFCgt!`, ephemeral: true });
      }).catch((err) => {
        console.log(err);
        return interaction.reply({ content: "Das EMoji konnte nicht hinzugef\xFCgt werden!", ephemeral: true });
      });
    }
  }
};
var emoji_default = command;
export {
  emoji_default as default
};
